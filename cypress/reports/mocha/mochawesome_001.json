{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2022-01-11T15:24:02.658Z",
    "end": "2022-01-11T15:24:33.358Z",
    "duration": 30700,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "216affa8-cd03-4359-b8ca-32d7815782f2",
      "title": "",
      "fullFile": "cypress/integration/CreateForm.js",
      "file": "cypress/integration/CreateForm.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "2d0ca4ad-d0f8-4381-9118-727d2fe62777",
          "title": "Test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "create form",
              "fullTitle": "Test create form",
              "timedOut": null,
              "duration": 25707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "call.login();\ncy.get(_locator.locators.createform).click(); //locating create form on page and clicking on it\ncy.get(_locator.locators.textcreateform).should('have.text', \"Create a Form\");\ncy.get(_locator.locators.text2createform).should('have.text', \"Create an amazing form to collect data easily.\"); //look for label                         \ncy.get(_locator.locators.formbuilder).should('be.visible').click(); //on select template look for form builder locator\ncy.get(_locator.locators.dragyouroption).should('be.visible'); //label drag your first element should be visible\ncy.get(_locator.locators.plusicon).click(); //click on plus icon\ncy.contains('Form Elements'); //check label Form element is there\ncy.get(_locator.locators.control).invoke('text').then(labelcontrol => {\n  //check whether label control  is there or not    \n  expect(labelcontrol.trim()).to.equal(\"Controls\");\n});\ncy.get(_locator.locators.typography).invoke('text').then(labeltypography => {\n  //check for label typography is there or not\n  expect(labeltypography.trim()).to.equal(\"Typography\");\n});",
              "err": {},
              "uuid": "2298b879-24d5-4a1d-a842-e6966731ddea",
              "parentUUID": "2d0ca4ad-d0f8-4381-9118-727d2fe62777",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2298b879-24d5-4a1d-a842-e6966731ddea"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 25707,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.0.1"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/reports/mocha",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.0.1"
    }
  }
}